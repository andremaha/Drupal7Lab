<?php

/**
 * @file
 * Lets users add private annotations to nodes.
 *
 * Adds a text field when a node is displayed
 * so that authenticated users may make notes.
 */

/**
 * Implementation of hook_menu()
 */
function annotate_menu() {

    $items['admin/config/annotate'] = array(
        'title'             => 'Node annotation',
        'description'       => 'Adjust node annotation options.',
        'position'          => 'right',
        'weight'            => -5,
        'page callback'     => 'system_admin_menu_block_page',
        'access arguments'  => array('administer site configuration'),
        'file'              => 'system.admin.inc',
        'file path'         => drupal_get_path('module', 'system')
    );

    $items['admin/config/annotate/settings'] = array(
        'title'             => 'Annotation settings',
        'description'       => 'Change how annotations behave.',
        'page callback'     => 'drupal_get_form',
        'page arguments'    => array('annotate_admin_settings'),
        'access arguments'  => array('administer site configuration'),
        'type'              => MENU_NORMAL_ITEM,
        'file'              => 'annotate.admin.inc',
    );

    return $items;
}

/**
 * Implements hook_node_load()
 *
 * Cheks if the user viewing the node is the node's author. Only
 * authors may annotate nodes
 */
function annotate_node_load($nodes, $types) {

    global $user;

    foreach ($nodes as $node) {
        if ($user->uid != $node->uid) {
            unset($node->annotation);
        }
    }

}

/**
 * Implements hook_trigger_info()
 *
 * Add some triggers for the annotations - so we could
 * use actions with them
 */
function annotate_trigger_info() {

    return array(
        'annotate' => array(
            'annotate_insert' => array(
                'label' => t('After saving new annotations'),
            ),
            'annotate_update' => array(
                'label' => t('After saving updated annotations'),
            ),
            'annotate_delete' => array(
                'label' => t('After deleting annotations'),
            ),
            'annotate_view' => array(
                'label' => t('When annotation is viewed by an authenticated user'),
            )
         )
    );

}